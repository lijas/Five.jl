using Five


function generate_my_grid()
    cells = Cell{2,3,3}[Cell{2,3,3}((30, 3, 56)), Cell{2,3,3}((9, 5, 84)), Cell{2,3,3}((21, 2, 55)), Cell{2,3,3}((10, 6, 161)), Cell{2,3,3}((11, 7, 83)), Cell{2,3,3}((81, 8, 144)), Cell{2,3,3}((12, 8, 81)), Cell{2,3,3}((83, 7, 143)), Cell{2,3,3}((53, 13, 93)), Cell{2,3,3}((84, 5, 142)), Cell{2,3,3}((144, 8, 187)), Cell{2,3,3}((85, 15, 120)), Cell{2,3,3}((120, 16, 159)), Cell{2,3,3}((101, 18, 138)), Cell{2,3,3}((138, 19, 140)), Cell{2,3,3}((19, 20, 140)), Cell{2,3,3}((2, 22, 55)), Cell{2,3,3}((156, 10, 161)), Cell{2,3,3}((110, 51, 166)), Cell{2,3,3}((132, 52, 162)), Cell{2,3,3}((55, 22, 94)), Cell{2,3,3}((7, 10, 133)), Cell{2,3,3}((105, 6, 151)), Cell{2,3,3}((6, 9, 151)), Cell{2,3,3}((33, 32, 141)), Cell{2,3,3}((31, 4, 54)), Cell{2,3,3}((35, 34, 100)), Cell{2,3,3}((129, 25, 130)), Cell{2,3,3}((130, 25, 180)), Cell{2,3,3}((103, 27, 146)), Cell{2,3,3}((27, 28, 146)), Cell{2,3,3}((142, 5, 181)), Cell{2,3,3}((36, 35, 173)), Cell{2,3,3}((32, 31, 90)), Cell{2,3,3}((34, 33, 139)), Cell{2,3,3}((37, 36, 121)), Cell{2,3,3}((28, 29, 145)), Cell{2,3,3}((48, 1, 53)), Cell{2,3,3}((122, 36, 173)), Cell{2,3,3}((4, 40, 54)), Cell{2,3,3}((131, 50, 165)), Cell{2,3,3}((1, 13, 53)), Cell{2,3,3}((54, 40, 95)), Cell{2,3,3}((13, 14, 93)), Cell{2,3,3}((92, 53, 137)), Cell{2,3,3}((15, 16, 120)), Cell{2,3,3}((127, 43, 128)), Cell{2,3,3}((128, 43, 178)), Cell{2,3,3}((106, 45, 155)), Cell{2,3,3}((45, 46, 155)), Cell{2,3,3}((40, 41, 95)), Cell{2,3,3}((87, 42, 127)), Cell{2,3,3}((38, 37, 88)), Cell{2,3,3}((39, 38, 96)), Cell{2,3,3}((22, 23, 94)), Cell{2,3,3}((86, 24, 129)), Cell{2,3,3}((46, 47, 152)), Cell{2,3,3}((14, 15, 85)), Cell{2,3,3}((90, 54, 135)), Cell{2,3,3}((41, 42, 87)), Cell{2,3,3}((91, 55, 136)), Cell{2,3,3}((23, 24, 86)), Cell{2,3,3}((3, 39, 56)), Cell{2,3,3}((56, 39, 96)), Cell{2,3,3}((114, 49, 158)), Cell{2,3,3}((43, 44, 178)), Cell{2,3,3}((139, 33, 141)), Cell{2,3,3}((96, 38, 134)), Cell{2,3,3}((118, 51, 177)), Cell{2,3,3}((25, 26, 180)), Cell{2,3,3}((16, 17, 124)), Cell{2,3,3}((125, 52, 175)), Cell{2,3,3}((104, 49, 169)), Cell{2,3,3}((124, 17, 171)), Cell{2,3,3}((8, 11, 187)), Cell{2,3,3}((88, 37, 121)), Cell{2,3,3}((44, 45, 106)), Cell{2,3,3}((105, 57, 170)), Cell{2,3,3}((26, 27, 103)), Cell{2,3,3}((102, 59, 167)), Cell{2,3,3}((20, 21, 91)), Cell{2,3,3}((98, 52, 149)), Cell{2,3,3}((47, 48, 92)), Cell{2,3,3}((85, 61, 158)), Cell{2,3,3}((126, 50, 176)), Cell{2,3,3}((99, 50, 148)), Cell{2,3,3}((29, 30, 89)), Cell{2,3,3}((102, 51, 150)), Cell{2,3,3}((108, 60, 184)), Cell{2,3,3}((129, 64, 175)), Cell{2,3,3}((5, 12, 181)), Cell{2,3,3}((127, 63, 176)), Cell{2,3,3}((99, 58, 164)), Cell{2,3,3}((88, 62, 177)), Cell{2,3,3}((98, 60, 163)), Cell{2,3,3}((117, 76, 170)), Cell{2,3,3}((184, 60, 185)), Cell{2,3,3}((21, 55, 91)), Cell{2,3,3}((182, 58, 186)), Cell{2,3,3}((31, 54, 90)), Cell{2,3,3}((81, 59, 188)), Cell{2,3,3}((30, 56, 89)), Cell{2,3,3}((82, 57, 107)), Cell{2,3,3}((104, 66, 119)), Cell{2,3,3}((48, 53, 92)), Cell{2,3,3}((114, 76, 117)), Cell{2,3,3}((100, 58, 174)), Cell{2,3,3}((118, 62, 147)), Cell{2,3,3}((101, 60, 172)), Cell{2,3,3}((158, 61, 183)), Cell{2,3,3}((103, 59, 179)), Cell{2,3,3}((125, 64, 154)), Cell{2,3,3}((97, 59, 160)), Cell{2,3,3}((118, 71, 150)), Cell{2,3,3}((126, 63, 157)), Cell{2,3,3}((116, 70, 151)), Cell{2,3,3}((125, 69, 149)), Cell{2,3,3}((133, 10, 156)), Cell{2,3,3}((126, 70, 148)), Cell{2,3,3}((109, 58, 182)), Cell{2,3,3}((153, 61, 159)), Cell{2,3,3}((66, 85, 119)), Cell{2,3,3}((24, 25, 129)), Cell{2,3,3}((113, 65, 132)), Cell{2,3,3}((42, 43, 127)), Cell{2,3,3}((112, 67, 131)), Cell{2,3,3}((121, 36, 122)), Cell{2,3,3}((110, 68, 123)), Cell{2,3,3}((89, 56, 96)), Cell{2,3,3}((89, 68, 110)), Cell{2,3,3}((87, 67, 95)), Cell{2,3,3}((90, 67, 112)), Cell{2,3,3}((86, 65, 94)), Cell{2,3,3}((91, 65, 113)), Cell{2,3,3}((85, 66, 93)), Cell{2,3,3}((92, 66, 104)), Cell{2,3,3}((14, 85, 93)), Cell{2,3,3}((93, 66, 137)), Cell{2,3,3}((23, 86, 94)), Cell{2,3,3}((94, 65, 136)), Cell{2,3,3}((41, 87, 95)), Cell{2,3,3}((95, 67, 135)), Cell{2,3,3}((88, 68, 134)), Cell{2,3,3}((68, 89, 96)), Cell{2,3,3}((97, 69, 154)), Cell{2,3,3}((59, 81, 160)), Cell{2,3,3}((138, 73, 163)), Cell{2,3,3}((65, 86, 132)), Cell{2,3,3}((139, 74, 164)), Cell{2,3,3}((67, 87, 131)), Cell{2,3,3}((100, 34, 139)), Cell{2,3,3}((109, 78, 174)), Cell{2,3,3}((18, 19, 138)), Cell{2,3,3}((108, 79, 172)), Cell{2,3,3}((146, 75, 167)), 
                        Cell{2,3,3}((109, 71, 147)), Cell{2,3,3}((145, 75, 146)), Cell{2,3,3}((97, 80, 179)), Cell{2,3,3}((117, 77, 169)), Cell{2,3,3}((104, 77, 152)), Cell{2,3,3}((107, 105, 151)), Cell{2,3,3}((161, 105, 170)), Cell{2,3,3}((152, 77, 155)), Cell{2,3,3}((57, 82, 106)), Cell{2,3,3}((107, 70, 157)), Cell{2,3,3}((57, 105, 107)), Cell{2,3,3}((108, 72, 153)), Cell{2,3,3}((133, 72, 143)), Cell{2,3,3}((122, 78, 147)), Cell{2,3,3}((116, 84, 186)), Cell{2,3,3}((102, 75, 166)), Cell{2,3,3}((110, 75, 145)), Cell{2,3,3}((12, 81, 111)), Cell{2,3,3}((111, 81, 188)), Cell{2,3,3}((99, 74, 165)), Cell{2,3,3}((112, 74, 141)), Cell{2,3,3}((98, 73, 162)), Cell{2,3,3}((113, 73, 140)), Cell{2,3,3}((119, 85, 158)), Cell{2,3,3}((114, 72, 156)), Cell{2,3,3}((11, 83, 115)), Cell{2,3,3}((115, 83, 185)), Cell{2,3,3}((9, 84, 116)), Cell{2,3,3}((58, 99, 186)), Cell{2,3,3}((155, 77, 168)), Cell{2,3,3}((49, 114, 117)), Cell{2,3,3}((68, 88, 123)), Cell{2,3,3}((59, 102, 188)), Cell{2,3,3}((49, 104, 119)), Cell{2,3,3}((153, 72, 183)), Cell{2,3,3}((17, 18, 171)), Cell{2,3,3}((61, 85, 120)), Cell{2,3,3}((78, 109, 147)), Cell{2,3,3}((62, 88, 121)), Cell{2,3,3}((100, 78, 173)), Cell{2,3,3}((62, 121, 122)), Cell{2,3,3}((51, 110, 123)), Cell{2,3,3}((123, 88, 177)), Cell{2,3,3}((171, 101, 172)), Cell{2,3,3}((124, 79, 159)), Cell{2,3,3}((130, 80, 154)), Cell{2,3,3}((60, 98, 185)), Cell{2,3,3}((128, 82, 157)), Cell{2,3,3}((148, 116, 186)), Cell{2,3,3}((82, 107, 157)), Cell{2,3,3}((131, 87, 176)), Cell{2,3,3}((106, 82, 178)), Cell{2,3,3}((63, 127, 128)), Cell{2,3,3}((80, 97, 154)), Cell{2,3,3}((132, 86, 175)), Cell{2,3,3}((103, 80, 180)), Cell{2,3,3}((64, 129, 130)), Cell{2,3,3}((50, 99, 165)), Cell{2,3,3}((63, 126, 176)), Cell{2,3,3}((52, 98, 162)), Cell{2,3,3}((64, 125, 175)), Cell{2,3,3}((149, 115, 185)), Cell{2,3,3}((168, 117, 170)), Cell{2,3,3}((38, 88, 134)), Cell{2,3,3}((68, 96, 134)), Cell{2,3,3}((67, 90, 135)), Cell{2,3,3}((54, 95, 135)), Cell{2,3,3}((65, 91, 136)), Cell{2,3,3}((55, 94, 136)), Cell{2,3,3}((66, 92, 137)), Cell{2,3,3}((53, 93, 137)), Cell{2,3,3}((20, 91, 140)), Cell{2,3,3}((73, 98, 163)), Cell{2,3,3}((32, 90, 141)), Cell{2,3,3}((74, 99, 164)), Cell{2,3,3}((91, 113, 140)), Cell{2,3,3}((73, 138, 140)), Cell{2,3,3}((90, 112, 141)), Cell{2,3,3}((74, 139, 141)), Cell{2,3,3}((71, 109, 142)), Cell{2,3,3}((111, 71, 181)), Cell{2,3,3}((72, 108, 143)), Cell{2,3,3}((7, 133, 143)), Cell{2,3,3}((69, 97, 144)), Cell{2,3,3}((115, 69, 187)), Cell{2,3,3}((29, 89, 145)), Cell{2,3,3}((89, 110, 145)), Cell{2,3,3}((75, 102, 167)), Cell{2,3,3}((28, 145, 146)), Cell{2,3,3}((71, 118, 147)), Cell{2,3,3}((62, 122, 147)), Cell{2,3,3}((70, 116, 148)), Cell{2,3,3}((50, 126, 148)), Cell{2,3,3}((69, 115, 149)), Cell{2,3,3}((52, 125, 149)), Cell{2,3,3}((71, 111, 150)), Cell{2,3,3}((51, 118, 150)), Cell{2,3,3}((70, 107, 151)), Cell{2,3,3}((9, 116, 151)), Cell{2,3,3}((47, 92, 152)), Cell{2,3,3}((92, 104, 152)), Cell{2,3,3}((61, 120, 159)), Cell{2,3,3}((79, 108, 153)), Cell{2,3,3}((69, 125, 154)), Cell{2,3,3}((64, 130, 154)), Cell{2,3,3}((57, 106, 168)), Cell{2,3,3}((46, 152, 155)), Cell{2,3,3}((76, 114, 156)), Cell{2,3,3}((72, 133, 156)), Cell{2,3,3}((70, 126, 157)), Cell{2,3,3}((63, 128, 157)), Cell{2,3,3}((49, 119, 158)), Cell{2,3,3}((72, 114, 183)), Cell{2,3,3}((16, 124, 159)), Cell{2,3,3}((79, 153, 159)), Cell{2,3,3}((144, 97, 160)), Cell{2,3,3}((81, 144, 160)), Cell{2,3,3}((6, 105, 161)), Cell{2,3,3}((76, 156, 161)), Cell{2,3,3}((73, 113, 162)), Cell{2,3,3}((113, 132, 162)), Cell{2,3,3}((60, 101, 163)), Cell{2,3,3}((101, 138, 163)), Cell{2,3,3}((58, 100, 164)), Cell{2,3,3}((100, 139, 164)), Cell{2,3,3}((74, 112, 165)), Cell{2,3,3}((112, 131, 165)), Cell{2,3,3}((51, 102, 166)), Cell{2,3,3}((75, 110, 166)), Cell{2,3,3}((59, 103, 167)), Cell{2,3,3}((103, 146, 167)), Cell{2,3,3}((77, 117, 168)), Cell{2,3,3}((106, 155, 168)), Cell{2,3,3}((77, 104, 169)), Cell{2,3,3}((49, 117, 169)), Cell{2,3,3}((76, 161, 170)), Cell{2,3,3}((57, 168, 170)), Cell{2,3,3}((18, 101, 171)), Cell{2,3,3}((79, 124, 171)), Cell{2,3,3}((60, 108, 172)), Cell{2,3,3}((79, 171, 172)), Cell{2,3,3}((35, 100, 173)), Cell{2,3,3}((78, 122, 173)), Cell{2,3,3}((78, 100, 174)), Cell{2,3,3}((58, 109, 174)), Cell{2,3,3}((86, 129, 175)), Cell{2,3,3}((52, 132, 175)), Cell{2,3,3}((87, 127, 176)), Cell{2,3,3}((50, 131, 176)), Cell{2,3,3}((62, 118, 177)), Cell{2,3,3}((51, 123, 177)), Cell{2,3,3}((44, 106, 178)), 
                        Cell{2,3,3}((82, 128, 178)), Cell{2,3,3}((59, 97, 179)), Cell{2,3,3}((80, 103, 179)), Cell{2,3,3}((26, 103, 180)), Cell{2,3,3}((80, 130, 180)), Cell{2,3,3}((12, 111, 181)), Cell{2,3,3}((71, 142, 181)), Cell{2,3,3}((142, 109, 182)), Cell{2,3,3}((84, 142, 182)), Cell{2,3,3}((61, 153, 183)), Cell{2,3,3}((114, 158, 183)), Cell{2,3,3}((143, 108, 184)), Cell{2,3,3}((83, 143, 184)), Cell{2,3,3}((98, 149, 185)), Cell{2,3,3}((83, 184, 185)), Cell{2,3,3}((99, 148, 186)), Cell{2,3,3}((84, 182, 186)), Cell{2,3,3}((11, 115, 187)), Cell{2,3,3}((69, 144, 187)), Cell{2,3,3}((150, 111, 188)), Cell{2,3,3}((102, 150, 188))]
    nodes = Node{2,Float64}[Node{2,Float64}(Vec{2}((20.0, 0.0))), Node{2,Float64}(Vec{2}((20.0, 20.0))), Node{2,Float64}(Vec{2}((0.0, 20.0))), Node{2,Float64}(Vec{2}((0.0, 0.0))), Node{2,Float64}(Vec{2}((7.5, 10.0))), Node{2,Float64}(Vec{2}((10.0, 7.5))), Node{2,Float64}(Vec{2}((12.5, 10.0))), Node{2,Float64}(Vec{2}((10.0, 12.5))), Node{2,Float64}(Vec{2}((8.232233047033631, 8.232233047033631))), Node{2,Float64}(Vec{2}((11.767766952966369, 8.232233047033631))), Node{2,Float64}(Vec{2}((11.767766952966369, 11.767766952966369))), Node{2,Float64}(Vec{2}((8.232233047033631, 11.767766952966369))), Node{2,Float64}(Vec{2}((20.0, 2.0))), Node{2,Float64}(Vec{2}((20.0, 4.0))), Node{2,Float64}(Vec{2}((20.0, 6.0))), Node{2,Float64}(Vec{2}((20.0, 8.0))), Node{2,Float64}(Vec{2}((20.0, 10.0))), Node{2,Float64}(Vec{2}((20.0, 12.0))), Node{2,Float64}(Vec{2}((20.0, 14.0))), Node{2,Float64}(Vec{2}((20.0, 16.0))), Node{2,Float64}(Vec{2}((20.0, 18.0))), Node{2,Float64}(Vec{2}((18.0, 20.0))), Node{2,Float64}(Vec{2}((16.0, 20.0))), Node{2,Float64}(Vec{2}((14.0, 20.0))), Node{2,Float64}(Vec{2}((12.0, 20.0))), Node{2,Float64}(Vec{2}((10.0, 20.0))), Node{2,Float64}(Vec{2}((8.0, 20.0))), Node{2,Float64}(Vec{2}((6.0, 20.0))), Node{2,Float64}(Vec{2}((4.0, 20.0))), Node{2,Float64}(Vec{2}((2.0, 20.0))), Node{2,Float64}(Vec{2}((0.0, 2.0))), Node{2,Float64}(Vec{2}((0.0, 4.0))), Node{2,Float64}(Vec{2}((0.0, 6.0))), Node{2,Float64}(Vec{2}((0.0, 8.0))), Node{2,Float64}(Vec{2}((0.0, 10.0))), Node{2,Float64}(Vec{2}((0.0, 12.0))), Node{2,Float64}(Vec{2}((0.0, 14.0))), Node{2,Float64}(Vec{2}((0.0, 16.0))), Node{2,Float64}(Vec{2}((0.0, 18.0))), Node{2,Float64}(Vec{2}((2.0, 0.0))), Node{2,Float64}(Vec{2}((4.0, 0.0))), Node{2,Float64}(Vec{2}((6.0, 0.0))), Node{2,Float64}(Vec{2}((8.0, 0.0))), Node{2,Float64}(Vec{2}((10.0, 0.0))), Node{2,Float64}(Vec{2}((12.0, 0.0))), Node{2,Float64}(Vec{2}((14.0, 0.0))), Node{2,Float64}(Vec{2}((16.0, 0.0))), Node{2,Float64}(Vec{2}((18.0, 0.0))), Node{2,Float64}(Vec{2}((15.153253162549339, 4.586468715108688))), Node{2,Float64}(Vec{2}((5.121983128947051, 4.647728142698987))), Node{2,Float64}(Vec{2}((4.702075149053283, 15.156458275385305))), Node{2,Float64}(Vec{2}((14.828177308434325, 15.356556648385267))), Node{2,Float64}(Vec{2}((18.548751351200355, 1.503513577302696))), Node{2,Float64}(Vec{2}((1.4573064625629861, 1.4071138112243837))), Node{2,Float64}(Vec{2}((18.54250846492454, 18.59549176764214))), Node{2,Float64}(Vec{2}((1.2562039073504838, 18.706816863855323))), Node{2,Float64}(Vec{2}((10.700494472106262, 3.8480157402897643))), Node{2,Float64}(Vec{2}((3.923197010645428, 8.380013120734892))), Node{2,Float64}(Vec{2}((8.521473357621048, 15.752208009164672))), Node{2,Float64}(Vec{2}((16.123751340917746, 11.83105386111039))), Node{2,Float64}(Vec{2}((17.22384680892277, 6.774386813456576))), Node{2,Float64}(Vec{2}((2.7118015396109105, 13.325494609323954))), Node{2,Float64}(Vec{2}((6.964661058627037, 2.931138612374956))), Node{2,Float64}(Vec{2}((12.947379740595608, 17.071660996864786))), Node{2,Float64}(Vec{2}((16.924270029403004, 17.36671017454359))), Node{2,Float64}(Vec{2}((17.2229399389866, 3.2395981591513645))), Node{2,Float64}(Vec{2}((3.071310312542339, 2.6408854721909147))), Node{2,Float64}(Vec{2}((2.529193861523852, 16.495820008636432))), Node{2,Float64}(Vec{2}((11.975331571900494, 14.593241343085563))), Node{2,Float64}(Vec{2}((7.607947671414034, 5.265081464371051))), Node{2,Float64}(Vec{2}((5.407813943392278, 11.994933280847203))), Node{2,Float64}(Vec{2}((14.736595184673476, 8.160596064830292))), Node{2,Float64}(Vec{2}((17.162050618583194, 14.380391628330408))), Node{2,Float64}(Vec{2}((2.8173805337643576, 5.719690973298472))), Node{2,Float64}(Vec{2}((5.8705922215119415, 17.081088492746872))), Node{2,Float64}(Vec{2}((12.992923422802047, 5.890037955227139))), Node{2,Float64}(Vec{2}((14.027656179308279, 2.9711953287150052))), Node{2,Float64}(Vec{2}((2.7001770101606404, 10.515128472906705))), Node{2,Float64}(Vec{2}((17.5140071377367, 9.434374948849337))), Node{2,Float64}(Vec{2}((10.553855262594974, 17.225138750367517))), Node{2,Float64}(Vec{2}((8.707290910192475, 13.751058523929377))), Node{2,Float64}(Vec{2}((9.347071398666598, 2.8781343260106538))), Node{2,Float64}(Vec{2}((13.395680231993877, 11.354708579498892))), Node{2,Float64}(Vec{2}((6.611612425752831, 8.654281221192877))), Node{2,Float64}(Vec{2}((18.038832582512672, 4.964891308770171))), Node{2,Float64}(Vec{2}((15.355406881154423, 18.254653594985328))), 
                            Node{2,Float64}(Vec{2}((4.6338808750813145, 1.7461905179496517))), Node{2,Float64}(Vec{2}((1.8402696819245805, 14.91490834540573))), Node{2,Float64}(Vec{2}((2.91479336057062, 18.242141884979798))), Node{2,Float64}(Vec{2}((1.5831592775245853, 3.032742343275553))), Node{2,Float64}(Vec{2}((18.4145052592202, 16.979279311395707))), Node{2,Float64}(Vec{2}((16.870619747669533, 1.6814878887476143))), Node{2,Float64}(Vec{2}((18.60391956597807, 3.006578380311923))), Node{2,Float64}(Vec{2}((17.094806527687492, 18.687395013292893))), Node{2,Float64}(Vec{2}((2.9037930248533015, 1.3146599479144843))), Node{2,Float64}(Vec{2}((1.358452959141277, 17.275508066217128))), Node{2,Float64}(Vec{2}((10.329894095109754, 15.660386023820124))), Node{2,Float64}(Vec{2}((15.655566379883526, 13.762196507858151))), Node{2,Float64}(Vec{2}((4.320962090277251, 6.316209203832323))), Node{2,Float64}(Vec{2}((1.94278007607944, 8.885760770009089))), Node{2,Float64}(Vec{2}((17.897717252241627, 11.906530228683314))), Node{2,Float64}(Vec{2}((6.427356336974759, 15.653058843133815))), Node{2,Float64}(Vec{2}((8.946873855595527, 17.97207839619157))), Node{2,Float64}(Vec{2}((15.596377988786253, 3.155496782175294))), Node{2,Float64}(Vec{2}((10.37908190057922, 5.629812587804953))), Node{2,Float64}(Vec{2}((10.967282402330556, 1.8403153136092598))), Node{2,Float64}(Vec{2}((9.130407361913354, 4.593727884198405))), Node{2,Float64}(Vec{2}((15.847670550016941, 9.89539514249459))), Node{2,Float64}(Vec{2}((4.286703242088589, 10.211668923235505))), Node{2,Float64}(Vec{2}((4.246556834927344, 16.745876479706656))), Node{2,Float64}(Vec{2}((7.0635623916532, 12.8724634565255))), Node{2,Float64}(Vec{2}((2.834918617678482, 4.126480668360188))), Node{2,Float64}(Vec{2}((17.155974435989442, 15.904391134652348))), Node{2,Float64}(Vec{2}((14.51860524669874, 6.149517714882287))), Node{2,Float64}(Vec{2}((12.80249525799691, 12.922592204614569))), Node{2,Float64}(Vec{2}((7.138985588333821, 6.974144300826022))), Node{2,Float64}(Vec{2}((13.65480325503575, 4.508324184244808))), Node{2,Float64}(Vec{2}((4.272257474335976, 13.469403220371943))), Node{2,Float64}(Vec{2}((16.431655976777524, 4.310823532661604))), Node{2,Float64}(Vec{2}((18.673610122960184, 6.762141255187271))), Node{2,Float64}(Vec{2}((1.2961353463580803, 13.235048256372272))), Node{2,Float64}(Vec{2}((1.9262094494957929, 11.939003422159155))), Node{2,Float64}(Vec{2}((3.3464008756589996, 15.569134601958865))), Node{2,Float64}(Vec{2}((18.839776832617762, 9.204604367015595))), Node{2,Float64}(Vec{2}((13.287769287757532, 15.741046760253687))), Node{2,Float64}(Vec{2}((6.572249578081155, 4.232575254854921))), Node{2,Float64}(Vec{2}((6.555171573658552, 1.6379108820204407))), Node{2,Float64}(Vec{2}((8.021417019806735, 2.064432504887746))), Node{2,Float64}(Vec{2}((13.414947248892291, 18.364168993709193))), Node{2,Float64}(Vec{2}((11.909120162690316, 17.956068886802992))), Node{2,Float64}(Vec{2}((4.205075650900425, 3.525855404317348))), Node{2,Float64}(Vec{2}((15.777316790888804, 16.48294288054431))), Node{2,Float64}(Vec{2}((13.243795131901479, 8.709718685339165))), Node{2,Float64}(Vec{2}((1.435156245879064, 16.176954277864482))), Node{2,Float64}(Vec{2}((2.254585737138598, 2.0982592386095327))), Node{2,Float64}(Vec{2}((17.744683990570753, 17.906685448029172))), Node{2,Float64}(Vec{2}((17.812509339189443, 2.352008961945951))), Node{2,Float64}(Vec{2}((18.44235038692439, 13.394134436777223))), Node{2,Float64}(Vec{2}((1.5196657843126864, 6.799245729701997))), Node{2,Float64}(Vec{2}((18.53009769098795, 15.102112625269342))), Node{2,Float64}(Vec{2}((1.4593840530309254, 4.949311087220434))), Node{2,Float64}(Vec{2}((5.9821723124493635, 10.203078554674889))), Node{2,Float64}(Vec{2}((14.081039682459002, 9.865197206899445))), Node{2,Float64}(Vec{2}((10.314429154441774, 14.091359991436851))), Node{2,Float64}(Vec{2}((4.987354659133889, 18.423527893005566))), Node{2,Float64}(Vec{2}((6.860465637418834, 18.420119059604755))), Node{2,Float64}(Vec{2}((3.5487340314974687, 11.906688879353156))), Node{2,Float64}(Vec{2}((6.057664732349239, 5.824620809293705))), Node{2,Float64}(Vec{2}((13.83613440827419, 14.143481480926752))), Node{2,Float64}(Vec{2}((5.869893647735101, 13.930468212915727))), Node{2,Float64}(Vec{2}((8.752730882541885, 6.360293299512821))), Node{2,Float64}(Vec{2}((14.920365933275576, 1.5607466505401837))), Node{2,Float64}(Vec{2}((16.538204002724815, 8.220435694664964))), Node{2,Float64}(Vec{2}((11.83831373072551, 16.384726864412883))), 
                            Node{2,Float64}(Vec{2}((13.048868795369087, 1.5995645724651482))), Node{2,Float64}(Vec{2}((13.154681782007707, 7.286892848354664))), Node{2,Float64}(Vec{2}((7.950216216748302, 3.6490778683829337))), Node{2,Float64}(Vec{2}((16.188647037360614, 5.629984704801475))), Node{2,Float64}(Vec{2}((18.126327108026732, 8.06622926770849))), Node{2,Float64}(Vec{2}((9.473540810711276, 14.82487767853315))), Node{2,Float64}(Vec{2}((11.707692678314894, 6.577649390670004))), Node{2,Float64}(Vec{2}((16.118350540260728, 15.165996964070123))), Node{2,Float64}(Vec{2}((17.058489168771263, 13.038757744004556))), Node{2,Float64}(Vec{2}((2.902984784451461, 7.224054846699872))), Node{2,Float64}(Vec{2}((3.8628862648879676, 4.871068724244251))), Node{2,Float64}(Vec{2}((5.321322070688042, 16.17280562718128))), Node{2,Float64}(Vec{2}((7.332562806202172, 16.989852151688318))), Node{2,Float64}(Vec{2}((12.391104077783408, 3.2738516334437193))), Node{2,Float64}(Vec{2}((14.596864457624083, 3.795332015148963))), Node{2,Float64}(Vec{2}((11.968068948074228, 4.945958599833717))), Node{2,Float64}(Vec{2}((18.571752515775273, 10.53646964762762))), Node{2,Float64}(Vec{2}((17.189336905166122, 10.710318331233301))), Node{2,Float64}(Vec{2}((1.311474061478071, 10.666291781592601))), Node{2,Float64}(Vec{2}((3.2081432734764608, 9.496997964998616))), Node{2,Float64}(Vec{2}((14.270843866518296, 16.880020748557097))), Node{2,Float64}(Vec{2}((5.6821079414468265, 3.1157388022496093))), Node{2,Float64}(Vec{2}((3.3794989337755306, 14.490884562955197))), Node{2,Float64}(Vec{2}((9.271198536749802, 1.3485283091751206))), Node{2,Float64}(Vec{2}((9.592991353940496, 16.667016917504917))), Node{2,Float64}(Vec{2}((10.68380927345007, 18.63852214753854))), Node{2,Float64}(Vec{2}((6.836288025700313, 11.368030729142376))), Node{2,Float64}(Vec{2}((5.268131244108978, 8.994351188182861))), Node{2,Float64}(Vec{2}((15.830139962823068, 6.989914680685201))), Node{2,Float64}(Vec{2}((14.777386168701772, 11.083844244610292))), Node{2,Float64}(Vec{2}((14.43604566781002, 12.507707842736496))), Node{2,Float64}(Vec{2}((5.552923538347304, 7.524577723624432))), Node{2,Float64}(Vec{2}((11.376043088127997, 13.177495294516945))), Node{2,Float64}(Vec{2}((7.32280711903949, 14.40140913917042)))]
    facedict = Dict{String,Set{FaceIndex}}()
    facedict["top"] = Set([FaceIndex(79, 1), FaceIndex(55, 1), FaceIndex(37, 1), FaceIndex(70, 1), FaceIndex(62, 1), FaceIndex(1, 1), FaceIndex(123, 1), FaceIndex(17, 1), FaceIndex(31, 1), FaceIndex(87, 1)])
    facedict["bottom"] = Set([FaceIndex(77, 1), FaceIndex(38, 1), FaceIndex(51, 1), FaceIndex(40, 1), FaceIndex(66, 1), FaceIndex(83, 1), FaceIndex(125, 1), FaceIndex(57, 1), FaceIndex(60, 1), FaceIndex(50, 1)])

    grid = Grid(cells, nodes, facesets = facedict)

    return grid
end

data = ProblemData(
    dim = 2,
    tend = .1
)

data.grid = generate_my_grid()

material = MatHyperElasticPlastic(
    elastic_material = MatNeoHook(
        E = 200.0e3,
        ν = 0.3
    ),
    τ₀ = 400.0,
    H = 200.0e3/20
) |> PlaneStrainMaterial

#=material = MatNeoHook(
    E = 200.0e3,
    ν = 0.3
) |> PlaneStrainMaterial=#

#=material = MatLinearElastic(
    E = 1e5,
    nu = 0.3
)
=#
#=@addmat MatLinearElastic, "Steel", 1 begin
    E = 1e5,
    nu = 0.3   
end=#

con1 = Dirichlet(
    set = getfaceset(data.grid, "bottom"),
    func = (x,t) -> (0.0, 0.0),
    field = :u,
    dofs = [1,2]
)
push!(data.dirichlet, con1)

con1 = Dirichlet(
    set = getfaceset(data.grid, "top"),
    func = (x,t) -> ( t*3.0, 0.0 ),
    field = :u,
    dofs = [1,2]
)
#push!(data.dirichlet, con1)

part = Part{2,Float64}(
    element = Five.SolidElementTria(),
    material = material,
    cellset = collect(1:getncells(data.grid))
)
push!(data.parts, part)

data.output[] = Output(
    interval = 0.0,
    runname = "ca3prob",
    savepath = "."
)

output = OutputData(
    type = DofValueOutput(
        field = :u,
        dofs = 1:2
    ),
    interval = 0.0,
    set = getfaceset(data.grid, "top")
)
data.outputdata["reactionforce"] = output

vtkoutput = VTKCellOutput(
    type = MaterialStateOutput(
        field = :ϵᵖ
    ),
    func = mean,
)
Five.push_vtkoutput!(data.output[], vtkoutput)

vtkoutput = VTKNodeOutput(
    type = MaterialStateOutput(
        field = :ϵᵖ
    ),
    func = mean,
)
Five.push_vtkoutput!(data.output[], vtkoutput)

addvertexset!(data.grid, "top", (x)-> x[2] ≈ 20.0)
force = PointForce(
    field = :u,
    comps = [1],
    set = getvertexset(data.grid, "top"),
    func = (X,t) -> 1.0
)
push!(data.external_forces, force)

solver = NewtonSolver(
    Δt0 = 0.0001,
    Δt_max = 0.05,
    max_residual = 1e5,
    tol = 1e-5
)


solver = LocalDissipationSolver(
    Δλ0          = 1.0,
    Δλ_max       = 10.0,
    Δλ_min       = 0.05,
    ΔL0          = 0.1,
    ΔL_min       = 0.001,
    ΔL_max       = 400.0,
    sw2d         = 10.0,
    sw2i         = 1e-7,
    optitr       = 8,
    maxitr       = 13,
    maxitr_first_step = 50,
    maxsteps     = 100,
    λ_max        = 1000.0,
    λ_min        = -10.0,
    tol          = 1e-5,
    max_residual = 1e5
)

state, data = build_problem(data)

output = solvethis(solver, state, data)
    
d = [output.outputdata["reactionforce"].data[i].displacement for i in 1:length(output.outputdata["reactionforce"].data)]
f = [output.outputdata["reactionforce"].data[i].fint for i in 1:length(output.outputdata["reactionforce"].data)]
